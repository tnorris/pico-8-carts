pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
-- slay the pocket
-- # vim: ts=1:sw=1
-- 2019, tom norris
function _init()
 cur_card=1
 active_card=0

 player={}
 player.is_player=true
 player.battles=0
 battle_turn=0

 player.world=1
 player.level=1

 player.hp={cap=12,current=12}
 player.block=0
 player.energy={cap=3,current=3}

 player.hand={}
 player.cards_per_turn=5
 player.draw_pile={}
 player.discard_pile={}

 player.deck={cards.stabby_boi,
  cards.stabby_boi,
  cards.stabby_boi,
  cards.block,
  cards.block,
  cards.block,
  cards.soup}

 opponents={}

 gm.mode('battle')
 new_battle()
end

function find_target(card, caster)
 if card.ta=="self" then
  return caster
 elseif card.ta=="an_enemy" then
  -- todo: be able to pick the monster to fight
  return opponents[1]
 end
end

function new_battle()
 player.battles +=1
 battle_turn = 0
 sfx(2)
 wait(20)
 if player.battles % 5 == 0 then
  opponents={copy(enemies.slime),copy(enemies.slime),copy(enemies.big)}
 else
  opponents={copy(enemies.slime),copy(enemies.slime)}
 end
 if player.battles % 3 == 0 then
  opponents[#opponents+1]=copy(enemies.skellington)
 end
 player.hand = {}
 player.draw_pile = copy(player.deck)
 shuffle(player.draw_pile)
 new_turn()
end
function wait(a) for i = 1,a do flip() end end
-- this should be in the event bus
function end_turn()
 -- monsters go!
 for _,v in pairs(opponents) do

  v.cmd(player, v.arg)
  if(v.sound) then
   sfx(v.sound)
   _draw()
   wait(10)
  end
 end
 discard_hand()
 new_turn()
end

function discard_hand()
 for _,c in pairs(player.hand) do
  add(player.discard_pile, c)
 end
 player.hand={}
end

function new_turn()
 battle_turn += 1
 player.energy.current = player.energy.cap
 player.block=0 -- should be an event bus..

 -- add cards to hand
 for _=1,player.cards_per_turn do
  _card=player.draw_pile[1]
  -- if card is nil, shuffle the
  -- discard pile, put it into the draw pile
  if (_card==nil) then
   player.draw_pile=copy(player.discard_pile)
   shuffle(player.draw_pile)
   player.discard_pile={}
   _card=player.draw_pile[1]
  end

  add(player.hand, _card)
  del(player.draw_pile, _card)
 end
end

-->8
-- input
function _update()
 if btnp(⬅️) then
  bus.notify('input', ⬅️)
 end
 if btnp(➡️) then
  bus.notify('input', ➡️)
 end
 if btnp(❎) then
  bus.notify('input',5)
 end
 if btnp(🅾️) then
  bus.notify('input',🅾️)
 end
 gm.update()
end

-->8
function _draw()
 cls()

 -- cards
 for i=1,#player.hand do
   draw_card((i-1)*24,player.hand[i], active_card==i)
 end

 -- cursor
 spr(1,(cur_card-1)*24+8,12+102)

 -- card text
 if #player.hand > 0 then
  print(player.hand[cur_card].n,0,68)
  print(player.hand[cur_card].w,0,76)
 end

 draw_opponents()
 draw_stats()
end

function with_slash(thing, x, y, bonus)
 local m=""
 if bonus and bonus > 0 then
  m=thing.current.."(+"..bonus..")/" .. thing.cap
 else
  m=thing.current.."/"..thing.cap
 end
 print(m,x,y)
end

function draw_opponents()
 local x_o=32
 local y_o=20
 for i,p in pairs(opponents) do
  if(p.m==true) then
   spr(p.t,x_o*i, y_o, p.w, p.h)
   spr(p.t,(x_o*i)+8, y_o, p.w, p.h,1)
   else
   spr(p.t,x_o*i, y_o, p.w, p.h)
  end
  with_slash(p.hp, (x_o*i), y_o+12)
  if(p.cmd==dmg) then
   spr(21, x_o*i, y_o-12)
  elseif(p.cmd==heal_m) then
   spr(17, x_o*i, y_o-12)
  end
  print(p.arg, x_o*i+8, y_o-12)
 end
end

-- player statistics
function draw_stats()
 spr(17,0,58)
 with_slash(player.hp, 8, 60, player.block)
 spr(16,0,50)
 with_slash(player.energy,8,52)
end

function draw_card(pos, card, raised)
 local y_o=85
 if raised==true then
  y_o-=12
 end
 local cst={5,6}
 cst[0]=4
 cst[-1]=7
 local c=2
 local he=3
 local ve=18
 local f=19
 local p={
  {c,he,c},
  {ve,f,ve},
  {ve,f,ve},
  {c,he,c}
 }

 -- cardboard
 for col=1,4 do
  if 4==col then
    flipy=true
  else
    flipy=false
  end
  for row=1,3 do
   if(3==row) flipx=true else flipx=false
   spr(p[col][row],(row-1)*8+pos,(col)*8+y_o,1,1,flipx,flipy)
  end
 end

 -- cost
 spr(cst[card.cost],14+pos,8+y_o)

 -- picture
 spr(card.t,pos+8,16+y_o)
 spr(card.b,pos+8,24+y_o)
end


-->8
-- bus + gamemanager
bus = {channels={input={}}}
function bus.notify (channel, data)
 for _,listener in pairs(bus.channels[channel]) do
   listener(data)
 end
end
function bus.valid_channel (channel)
 return (bus.channels[channel] ~= nil)
end
function bus.register (channel, listener)
 bus.channels[channel][#bus.channels[channel]+1]=listener
end
function bus.deregister (channel, listener)
 del(bus.channels[channel], listener)
end

gm={current_mode=""}
function gm.mode(game_mode)
 gm.current_mode=game_mode
 if(game_mode == "battle") then
  -- register the card move handlers
  bus.register('input', card_move_handler)
 end
end
function gm.update()
 if gm.current_mode == "battle" then
  if player.hp.current <= 0 then
   cls()
   print("you died. you fought "..player.battles.." battles")
   stop()
  end
  if #opponents == 0 then
   -- maybe give player gold?
   new_battle()
  end
 end
end

function gm.play_card(caster, castee, card)
 if caster.energy.current < card.cost then
  -- maybe highlight the energy spot?
  return
 end
 if card == nil then return end

 if card.sound then
  sfx(card.sound)
 end
 caster.energy.current-=card.cost
 card.cmd(castee, card.arg)
 add(player.discard_pile, card)
 if(card.exhaust) then
  del(player.discard_pile, card)
 end
 del(player.hand, card)
end

-->8
function dmg(target, arg)
 if (target.block and target.block > 0) then
  if arg > target.block then
   arg -= target.block
   target.block = 0
  else
   target.block -= arg
   arg = 0
  end
 end

 target.hp.current -= arg
 if target.hp.current < 1 then
  del(opponents, target)
 end
end

function storm(target, arg)
 target.hp.current -= player.energy.current+2
 player.energy.current = 0
 if target.hp.current < 1 then
  del(opponents, target)
 end
end

function block(target, arg)
 target.block += arg
end

function heal(target, arg)
 target.hp.current +=arg
 if target.hp.current > target.hp.cap then
  target.hp.current = target.hp.cap
 end
end

function heal_m(_, arg)
 target = opponents[1]
 target.hp.current +=arg
 if target.hp.current > target.hp.cap then
  target.hp.current = target.hp.cap
 end
end

cards={}
cards.stabby_boi={
 t=20,b=36,
 cost=1,
 cmd=dmg,arg=2,
 sound=3,
 n="stabby boi",
 w="2 points of stab.",
 ta="an_enemy"}

cards.soup={
 t=17,b=19,
 cost=2,
 cmd=heal,arg=2,
 exhaust=true,
 n="mom's soup",
 w="heal 2 (once/battle)",
 sound=6,
 ta="self"}

cards.block={
 t=22,b=38,
 cost=1,
 cmd=block,arg=3,
 n="shield",
 w="+3 block.",
 sound=7,
 ta="self"}

cards.blade_storm={
 t=21,b=37,
 cost=-1, -- "x" cost is -1
 cmd=storm,arg=2,
 n="blade storm",
 w="x+2 damage to the first enemy",
 ta="an_enemy"}

-->8
enemies={}
enemies.slime={
 t=26,w=1,h=1,
 hp={cap=6,current=6},
 block=0,
 cmd=dmg,arg=2,
 sound=4}

enemies.big={
 t=27,m=true,w=1,h=1,
 hp={cap=10,current=10},
 block=0,
 cmd=dmg,arg=4,
 sound=5}

 enemies.skellington={
  t=25,w=1,h=1,
  hp={cap=4,current=4},
  block=0,
  cmd=heal_m,arg=2,
  sound=6}

-->8
function card_move_handler(event)
 if (event == 5) then
  card_select()
 end
 if (event==4) then
  end_turn()
 end
 if (event == ⬅️) then
  card_cursor_move(-1)
 end
 if (event == ➡️) then
  card_cursor_move(1)
 end
end

function card_select()
 if #player.hand == 0 then
  return
 end
 sfx(0)
 last_select=now
 if cur_card == active_card then
  _c = player.hand[active_card]
  active_card=0
  cur_card=1
  gm.play_card(player,find_target(_c, player),_c)
  return
 end
 active_card=cur_card
end

function card_cursor_move(dir)
 cur_card+=dir
 sfx(1)
 if cur_card > #player.hand then
  cur_card=1
 end
 if cur_card < 1 then
  cur_card=#player.hand
 end
end

-->8
function copy(obj, seen)
  if type(obj) ~= 'table' then return obj end
  if seen and seen[obj] then return seen[obj] end
  local s = seen or {}
  local res = setmetatable({}, getmetatable(obj))
  s[obj] = res
  for k, v in pairs(obj) do res[copy(k, s)] = copy(v, s) end
  return res
end

function swap(array, index1, index2)
    array[index1], array[index2] = array[index2], array[index1]
end

function shuffle(array)
  local counter = #array
  while counter > 1 do
    local index = flr(rnd(counter)+1)
    swap(array, index, counter)
    counter = counter - 1
  end
end

__gfx__
00000000009999000001111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000099999a00012222222222222000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700991111990122222222222222007770000077000000777000007070000000000000000000000000000000000000000000000000000000000000000000
00077000991551990122222222222222007070000007000000007000007070000000000000000000000000000000000000000000000000000000000000000000
00077000991551990122222222222222007070000007000000777000000700000000000000000000000000000000000000000000000000000000000000000000
00700700991111990122222222222222007070000007000000700000007070000000000000000000000000000000000000000000000000000000000000000000
00000000089999900122222222222222007770000077700000777000007070000000000000000000000000000000000000000000000000000000000000000000
00000000008999000122222222222222000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000122222222222222000600000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000
00777700088088000122222222222222006670000000600006666660000000000000000000777700000330000000003300000000000000000000000000000000
007cc700888878800122222222222222006670000000600006333360000000000000000007777770033333300003333300000000000000000000000000000000
007cc70088888880012222222222222200c670000000600006333360000000000000000007717170337373330333373300000000000000000000000000000000
07cccc7088888880012222222222222200c670000000600006333360000000000000000007777770333333333333333300000000000000000000000000000000
07cccc7008888800012222222222222200c670000004640006344360000000000000000000711170533337733333377700000000000000000000000000000000
07cccc7000888000012222222222222200c670000000400006644660000000000000000000777700053373305333373300000000000000000000000000000000
0077770000080000012222222222222200c660000000400000644600000000000000000000000000000000000553333300000000000000000000000000000000
0000000000000000760000670000000004c664000000000000666600000000000000000000000000000000000000000000000000000000000000000000000000
0011100006666600600000060006000044c664400600006000066000000000000000000000000000000000000000000000000000000000000000000000000000
01222100063336000000000000060000004440000600006000066000000000000000000000000000000000000000000000000000000000000000000000000000
01222100063336000000000000060000004440000600006000000000000000000000000000000000000000000000000000000000000000000000000000000000
01222100063436000000000000060000005540000600006000000000000000000000000000000000000000000000000000000000000000000000000000000000
01222100066466000000000000464000000000004640046400000000000000000000000000000000000000000000000000000000000000000000000000000000
01222100006660006000000600040000000000000400004000000000000000000000000000000000000000000000000000000000000000000000000000000000
00111000000600007600006700040000000000000400004000000000000000000000000000000000000000000000000000000000000000000000000000000000
00555555555555555333333353333333333333333333333333333335555555003333333500000000000000000000000000000000000000000000000000000000
05333333333333335333333353333333333333333333333333333335333333503333333500000000000000000000000000000000000000000000000000000000
53333333333333335333333353333333333333333333333333333335333333353333333500000000000000000000000000000000000000000000000000000000
53333333333333335333333353333333333333333333333333333335333333353333333500000000000000000000000000000000000000000000000000000000
53333333333333335333333353333333333333333333333333333335333333353333333500000000000000000000000000000000000000000000000000000000
53333333333333335333333353333333333333333333333333333335333333353333333500000000000000000000000000000000000000000000000000000000
53333333333333335333333305333333333333333333333333333350333333353333333500000000000000000000000000000000000000000000000000000000
53333333333333335333333300555555333333335555555555555500333333353333333500000000000000000000000000000000000000000000000000000000
__gff__
0001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0030313131313131313131313131370000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0032343434343434343434343434380000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0032343434343434343434343434380000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0032343434343434343434343434380000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0032343434343434343434343434380000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0032343434343434343434343434380000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0032343434343434343434343434380000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0032343434343434343434343434380000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0032343434343434343434343434380000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0032343434343434343434343434380000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0033353535353535353535353535360000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100000d0500e0501005012050160501a0501a05019050180500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100002f0502f050310503405035050370403805001000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000f00001125014250112500120011250182000000001200112501425011250112001025013250102500000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0001000015650196500e650286503165033650186500d6500b6500b65008650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000a00002005017050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00100000160501f050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0005000005250062500925011250182501b2502225000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00050000171500c150081500750006500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
00 41424344
00 41424344
00 02424344

